{"version":3,"sources":["components/HospitalCard/HospitalCard.js","components/Hospitals/Hospitals.js","data.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","imageContainer","margin","overflow","display","alignItems","justifyContent","title","fontSize","fontWeight","width","color","button","textAlign","background","HospitalCard","props","hospital","classes","Card","CardContent","style","paddingBottom","className","alt","src","imageUrl","height","Typography","align","gutterBottom","Divider","Button","onClick","window","open","location","content","marginTop","padding","paper","transition","cursor","transform","Hospitals","hospitals","Grid","container","spacing","map","item","key","id","lg","md","sm","xs","uuid","App","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ReactGA","initialize","pageview"],"mappings":"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","file":"static/js/main.555b594b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  },\n  imageContainer: {\n    margin: '0 auto',\n    // border: `1px solid ${theme.palette.divider}`,\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title:{\n    fontSize: '25px',\n    fontWeight:'700',\n    margin:'10px 0',\n    width: '100%',\n    color: 'black',\n    // theme.palette.text.primary,\n  },\n  button: {\n    textAlign: 'center',\n    margin: '10px',\n    background: 'deepskyblue',\n  },\n}));\n\n\nconst HospitalCard = props => {\n  const {hospital} = props;\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent\n        style={{paddingBottom: '0'}}\n        className={classes.root}\n      >\n        <div className={classes.imageContainer}>\n          <img\n            alt=\"Product\"\n            src={hospital.imageUrl}\n            height=\"300\"\n          />\n        </div>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          className={classes.title}\n        >\n          {hospital.title}\n        </Typography>\n\n        <Divider />\n        <Button\n          className={classes.button}\n          onClick = {() => {window.open(`https://www.google.com/maps/place/${hospital.location}`, '_blank')}}>\n            Location\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nHospitalCard.propTypes = {\n  className: PropTypes.string,\n  hospital: PropTypes.object.isRequired\n};\n\nexport default HospitalCard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport HospitalCard from '../HospitalCard/HospitalCard';\nimport {Grid} from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  content: {\n    marginTop: '10px',\n    padding: '20px',\n  },\n  paper: {\n    transition: '.2s transform',\n    '&:hover':{\n      cursor: 'pointer',\n      transform: 'scale(1.06)',\n    }\n  }\n}));\n\n\nconst Hospitals = props => {\n  const { hospitals } = props;\n  const classes = useStyles();\n\n  return (\n      <div className={classes.content}>\n        <Grid\n          container\n          spacing={3}\n        >\n          {hospitals.map(hospital => (\n            <Grid\n              item\n              key={hospital.id}\n              lg={4}\n              md={4}\n              sm={6}\n              xs={12}\n              className={classes.paper}\n            >\n              <HospitalCard hospital={hospital} />\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    );\n  }\n\nexport default Hospitals;\n","import uuid from 'uuid/v1';\nexport const hospitals = [\n  {\n    id: uuid(),\n    title:`CHU Mustapha Pacha`,\n    location: `36°45'46.3\"N 3°03'11.4\"E`,\n    // imageUrl: `https://www.chu-mustapha.dz/wp-content/uploads/2015/07/hopital-642x300.jpg`,\n    imageUrl: `pictures/hospitals/CHU_Mustapha_Pacha.jpg`\n  },\n  {\n    id: uuid(),\n    title:`CHU Beni Messous`,\n    location: `36°46'49.2\"N 2°58'53.0\"E`,\n    // imageUrl: `https://upload.wikimedia.org/wikipedia/commons/9/99/CHU_Beni_Messous_%D8%A7%D9%84%D9%85%D8%B3%D8%AA%D8%B4%D9%81%D9%89_-_panoramio_%283%29.jpg`\n    imageUrl: `pictures/hospitals/CHU_Beni_Messous.jpg`\n  },\n  {\n    id: uuid(),\n    title:`CHU Bab El Oued`,\n    // imageUrl: `https://upload.wikimedia.org/wikipedia/commons/5/57/Hopital_Mohamed_Lamine_Debaghine_%C3%A0_Alger.jpg`,\n    imageUrl: `pictures/hospitals/CHU_Bab_El_Oued.jpg`,\n    location: `36°47'36.3\"N 3°03'02.5\"E`\n  },\n  {\n    id: uuid(),\n    title:`EHS Salim Zemirli`,\n    // imageUrl: `https://scontent-mad1-1.xx.fbcdn.net/v/t1.0-9/39162712_519421175174545_7685812511261589504_o.jpg?_nc_cat=100&_nc_ohc=aRczq-r9z0sAQleCHo7rAwhM66s-QmzP9-7bvIyYcVmeMpZSR-erEATOg&_nc_ht=scontent-mad1-1.xx&oh=20d35f20f4826a616469c64a1ad5ba8e&oe=5E7FEC16`,\n    imageUrl: `pictures/hospitals/EHS_Salim_Zemirli.jpg`,\n    location: `36°47'36.3\"N 3°03'02.5\"E`\n  },\n  {\n    id: uuid(),\n    title:`EHS Dr Madouche (CNMS)`,\n    // imageUrl: `https://lh3.googleusercontent.com/p/AF1QipM0OdgQrJIJturhn4vytJMSJdLJB1Y-ZHwdM3wW=s1600-h380`,\n    imageUrl: `pictures/hospitals/EHS_CNMS.jpg`,\n    location: `36°46'05.0\"N 3°00'01.2\"E`\n  },\n  {\n    id: uuid(),\n    title:`CHU Douera`,\n    // imageUrl: `https://scontent-mad1-1.xx.fbcdn.net/v/t1.0-9/s960x960/62783938_2348426542112483_8161708876366872576_o.jpg?_nc_cat=106&_nc_ohc=3gjzgRlPyBgAQlm-7Xq0iIBZAvDghwXWTJnkFL4RQve5xGJ67gQql1SYw&_nc_ht=scontent-mad1-1.xx&oh=2d20ba6ea5db4be29adfc01c090da815&oe=5E4F4A49`,\n    imageUrl: `pictures/hospitals/CHU_Douera.jpg`,\n    location: `36°39'58.7\"N 2°56'34.1\"E`\n  },\n  {\n    id: uuid(),\n    title:`EHS Ait Idir`,\n    // imageUrl: `http://www.alger-city.com/pics/ville/sante/hopital-ali-ait-idir/hopital-neurochirurgie-ali-ait-idir-casbah-alger.jpg`,\n    imageUrl: `pictures/hospitals/EHS_Ali_Ait_Idir.jpg`,\n    location: `36°47'13.6\"N 3°03'29.7\"E`\n  },\n  {\n    id: uuid(),\n    title:`EPH El Biar (Birtraria)`,\n    // imageUrl: `https://scontent-mad1-1.xx.fbcdn.net/v/t31.0-8/p960x960/12240912_138925849801153_2814322703766458871_o.jpg?_nc_cat=111&_nc_ohc=CpYuTgpA38sAQlSXDEIuaF4Ffj8XcAyuf9wXkTHPbxPOoen5Iif2yUF9w&_nc_ht=scontent-mad1-1.xx&oh=392050154e07d8b5e7a6f1776a643e10&oe=5E4E82DB`,\n    imageUrl: `pictures/hospitals/EPH_Birtraria.jpg`,\n    location: `36°46'21.6\"N 3°02'24.3\"E`\n  },\n  {\n    id: uuid(),\n    title:`EPH Kouba`,\n    // imageUrl: `https://upload.wikimedia.org/wikipedia/commons/f/ff/Photo_hopital_kouba_26052016.jpg`,\n    imageUrl: `pictures/hospitals/EPH_Kouba.jpg`,\n    location: `36°43'32.7\"N 3°05'14.0\"E`\n  },\n  {\n    id: uuid(),\n    title:`EPH Bologhine`,\n    // imageUrl: `https://cdnfr2.img.sputniknews.com/images//104213/97/1042139753.jpg`,\n    imageUrl: `pictures/hospitals/EPH_Bologhine.jpg`,\n    location: `36°48'38.7\"N 2°58'47.2\"E`\n  },\n  {\n    id: uuid(),\n    title:`EPH El Harrach (Belfort)`,\n    // imageUrl: `https://scontent-mrs2-2.xx.fbcdn.net/v/t1.0-9/26731367_400495023727496_8203033252755700365_n.jpg?_nc_cat=108&_nc_ohc=gc8xaXof01YAQmt6w8zL9nLmmI9yDvcJ-NeuwhzBjRkpZX_OWXKQGGK9A&_nc_ht=scontent-mrs2-2.xx&oh=adcf24cde177604e21e710571d7c587c&oe=5E4A2613`,\n    imageUrl: `pictures/hospitals/EPH_Belfort.jpg`,\n    location: `36°43'13.6\"N 3°08'51.9\"E`\n  },\n  {\n    id: uuid(),\n    title:`EPH Ain Taya`,\n    // imageUrl: `https://scontent-mrs2-2.xx.fbcdn.net/v/t31.0-8/11393222_1592642771013314_9156192588752806168_o.jpg?_nc_cat=100&_nc_ohc=8mxLuIdb3J0AQnGxmXifmwsRFpObmxf-OmQDFKlnw4XWtGgRMnG6uzfNQ&_nc_ht=scontent-mrs2-2.xx&oh=2811afbfb09b39cdf16a1ec02b812b25&oe=5E42B4C6`,\n    imageUrl: `pictures/hospitals/EPH_Ain_Taya.jpg`,\n    location: `36°47'22.2\"N 3°17'46.4\"E`\n  },\n  {\n    id: uuid(),\n    title:`EPH Zeralda`,\n    // imageUrl: `https://live.staticflickr.com/4790/25880662817_c516b4a928_b.jpg`,\n    imageUrl: `pictures/hospitals/EPH_Zeralda.jpg`,\n    location: `36°42'00.8\"N 2°50'34.2\"E`\n  },\n  {\n    id: uuid(),\n    title:`EPH Rouiba`,\n    // imageUrl: `https://2.bp.blogspot.com/-ef4dOPhRwPc/Vsd6FYdWoLI/AAAAAAAATic/qTt-kBOvIqI/s1600/Hospital-ROUIBA.jpg`,\n    imageUrl: `pictures/hospitals/EPH_Rouiba.jpg`,\n    location: `36°44'08.2\"N 3°17'08.5\"E`\n  },\n  {\n    id: uuid(),\n    title:`EHS Abderrahmani (Bir Mourad Rais)`,\n    // imageUrl: `https://lh3.googleusercontent.com/p/AF1QipONPjU2Tm0e1WErGgi2G1ShBawzhjhACBPx2jUx=s1600-w400`,\n    imageUrl: `pictures/hospitals/EHS_Abderrahmani.jpg`,\n    location: `36°44'03.0\"N 3°03'11.9\"E`\n  },\n  {\n    id: uuid(),\n    title:\"CHU Husein dey (Parnet)\",\n    // imageUrl: `https://scontent-mad1-1.xx.fbcdn.net/v/t31.0-8/1400827_482994668475020_775300573_o.jpg?_nc_cat=106&_nc_ohc=hgo3p8MqzwkAQlaazQNxM4DFRi_gptptgRXk4W-SUmJT9doQNO5n9mrpg&_nc_ht=scontent-mad1-1.xx&oh=01fb9ed3c508d6187a146630f59a3943&oe=5E4F6F40`,\n    imageUrl: `pictures/hospitals/CHU_Parnet.jpg`,\n    location: `36°44'09.2\"N 3°06'16.1\"E`\n  }\n];\n","import React, {Component} from 'react';\nimport {Hospitals} from './components';\nimport './App.css';\nimport {hospitals} from './data.js';\nimport ReactGA from 'react-ga'\n\nexport function initializeReactGA() {\n    ReactGA.initialize('UA-153112247-1');\n    ReactGA.pageview('/homepage');\n}\n\nexport class App extends Component{\n    render(){\n        return (\n            <div className=\"App\">\n                <h1 style={{textAlign:'center'}}> HOPITAUX </h1>\n                <Hospitals hospitals={hospitals} />\n            </div>\n        );\n    }\n}\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App, initializeReactGA } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\ninitializeReactGA()\n"],"sourceRoot":""}